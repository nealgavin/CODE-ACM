#include<stdio.h>
void qqsort(int shu[],int left,int right)
{
  int i=left,j=right,middle,z;
  middle=shu[(left+right)/2];
  do{
    while(i<right&&shu[i]>middle)i++;
    while(j>left&&shu[j]<middle)j--;
    if(i<=j){z=shu[i];shu[i]=shu[j];shu[j]=z;i++;j--;}
  }while(i<=j);
  if(i<right)qqsort(shu,i,right);
  if(j>left)qqsort(shu,left,j);
}
int main()
{
  int king[1002],tian[1002],first_a,first_b,end_a,end_b,i,m,count;
  while(scanf("%d",&m)&&m)
  {
    first_a=first_b=1;end_a=end_b=m;count=0;
    for(i=1;i<=m;i++)
    {
      scanf("%d",&tian[i]);
    }
    for(i=1;i<=m;i++)
    {
      scanf("%d",&king[i]);
    }
    qqsort(tian,1,m);qqsort(king,1,m);
    for(i=1;i<=m;i++)
    {
     if(tian[first_a]>king[first_b])
     {
       first_a++;first_b++;
       count++;
     }
     else if(tian[first_a]<king[first_b])
     {
       end_a--;first_b++;count--;
     }
     else if(tian[end_a]>king[end_b])
     {
       end_a--;end_b--;count++;
     }
     else if(tian[end_a]<king[end_b])
     {
       end_a--;first_b++;count--;
     }
     else if(king[first_b]>tian[end_a])
     {
       first_b++;end_a--;count--;
     }
    }
    printf("%d\n",200*count);
  }
}
