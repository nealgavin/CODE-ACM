#include<stdio.h>
#define N 100002
int root[N],rank[N],s[N];
int find_set(int i)
{
  if(root[i]!=i)
  root[i]=find_set(root[i]);
  return root[i];
}
void make_set(int i)
{
  root[i]=i;
  rank[i]=1;
  s[i]=0;
}
void unio(int x,int y)
{
  if(rank[x]>=rank[y]){rank[y]=x;rank[x]+=rank[y];}
  else
  {
    rank[x]=y;rank[y]+=rank[x];
  }
}
int main()
{
  int m,n,x,y,i,flag;

  while(1)
  {for(i=1;i<=N;i++)
  make_set(i);
    flag=1;x=0;y=0;
    while(1)
    {
      scanf("%d%d",&m,&n);x++;
      if(m==0&&n==0&&x==1)break;
      if(m==find_set(m))s[m]++;
      if(n==find_set(n))s[n]++;
      if(m==-1&&n==-1)break;
      if(m==0&&n==0)break;
      if(find_set(m)!=find_set(n))
      unio(find_set(m),find_set(n));
      else
      flag=0;

    }
    for(i=1;i<=N;i++)
    {
      if(s[i])y++;
    }if(m==0&&n==0&&x==1){printf("Yes\n");continue;}
    if(m==-1&&n==-1)break;
    if((m==0&&n==0&&flag==1&&y==x))printf("Yes\n");
    else printf("No\n");
  }
}
