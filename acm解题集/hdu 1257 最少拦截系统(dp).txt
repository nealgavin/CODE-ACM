最少拦截系统

Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 10355    Accepted Submission(s): 4055




Problem Description

某国为了防御敌国的导弹袭击,发展出一种导弹拦截系统.但是这种导弹拦截系统有一个缺陷:虽然它的第一发炮弹能够到达任意的高度,但是以后每一发炮弹都不能超过前一发的高度.某天,雷达捕捉到敌国的导弹来袭.由于该系统还在试用阶段,所以只有一套系统,因此有可能不能拦截所有的导弹.
怎么办呢?多搞几套系统呗!你说说倒蛮容易,成本呢?成本是个大问题啊.所以俺就到这里来求救了,请帮助计算一下最少需要多少套拦截系统.


 




Input

输入若干组数据.每组数据包括:导弹总个数(正整数),导弹依此飞来的高度(雷达给出的高度数据是不大于30000的正整数,用空格分隔)


 




Output

对应每组数据输出拦截所有导弹最少要配备多少套这种导弹拦截系统.


 




Sample Input

8 389 207 155 300 299 170 158 65
 




Sample Output

2
 




Source

浙江工业大学第四届大学生程序设计竞赛 






Recommend

JGShining


思路：本题的意思就是从序列中找到一个最长递减子序列然后删除，继续找。一个有几个答案就是几。

         因此可以设dp[i]为有i套系统。没来一个导弹就看看这i个系统中找看能不能有可以拦截的。有就找最低的那个更新值。没有就加个系统。

        全部扫完答案就出来了。

#include<iostream>
using namespace std;
const int mm=1000100;
int dp[mm];
int s[mm];
int n;
int main()
{ int pos;
  while(cin>>n)
  { for(int i=0;i<n;i++)
    cin>>s[i];
    pos=0;
    for(int i=0;i<n;i++)
    { int j;
      for(j=0;j<pos;j++)
      {
        if(dp[j]>=s[i]){dp[j]=s[i];break;}
      }
      if(j==pos)dp[pos++]=s[i];
    }
    cout<<pos<<"\n";
  }
}




