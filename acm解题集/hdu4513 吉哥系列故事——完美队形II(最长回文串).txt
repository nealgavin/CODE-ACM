吉哥系列故事――完美队形II

Time Limit: 3000/1000 MS (Java/Others)    Memory Limit: 65535/32768 K (Java/Others)
Total Submission(s): 365    Accepted Submission(s): 106


Problem Description
　　吉哥又想出了一个新的完美队形游戏！
　　假设有n个人按顺序站在他的面前，他们的身高分别是h[1], h[2] ... h[n]，吉哥希望从中挑出一些人，让这些人形成一个新的队形，新的队形若满足以下三点要求，则就是新的完美队形：

　　1、挑出的人保持原队形的相对顺序不变，且必须都是在原队形中连续的；
　　2、左右对称，假设有m个人形成新的队形，则第1个人和第m个人身高相同，第2个人和第m-1个人身高相同，依此类推，当然如果m是奇数，中间那个人可以任意；
　　3、从左到中间那个人，身高需保证不下降，如果用H表示新队形的高度，则H[1] <= H[2] <= H[3] .... <= H[mid]。

　　现在吉哥想知道：最多能选出多少人组成新的完美队形呢？
 

Input
　　输入数据第一行包含一个整数T，表示总共有T组测试数据(T <= 20)；
　　每组数据首先是一个整数n(1 <= n <= 100000)，表示原先队形的人数，接下来一行输入n个整数，表示原队形从左到右站的人的身高（50 <= h <= 250，不排除特别矮小和高大的）。
 

Output
　　请输出能组成完美队形的最多人数，每组输出占一行。
 

Sample Input
2
3
51 52 51
4
51 52 52 51
 

Sample Output
3
4
 

Source
2013腾讯编程马拉松初赛第二场（3月22日）
 

Recommend
liuyiding

思路：Manacher算法

#include<iostream>
#include<cstring>
#include<cstdio>
using namespace std;
const int mm=3e5+9;
int f[mm],ff[mm],pos,n;
void creat()
{ ff[0]=1;
  ff[1]=0;
  for(int i=0;i<n;++i)
    ff[i+i+2]=f[i],ff[i+i+3]=0;
  pos=n+n+2;
}
inline int Min(int x,int y)
{
  return x<y?x:y;
}
void getp()
{ int mx=0,id;
  for(int i=1;i<pos;++i)
  {
    if(mx>i)
      f[i]=Min(f[id+id-i],mx-i);
    else f[i]=1;
    while(ff[i+f[i]]==ff[i-f[i]]&&(!ff[i+f[i]]||f[i]<2||ff[i+f[i]]<=ff[i+f[i]-2]))++f[i];
    if(mx<i+f[i])mx=i+f[i],id=i;
    ///cout<<f[i]<<endl;
  }
}
int main()
{
  int cas;
  while(scanf("%d",&cas)!=EOF)
  {
    while(cas--)
    {
      scanf("%d",&n);
      for(int i=0;i<n;++i)
        scanf("%d",&f[i]);
      creat();
      getp();
      int ans=0;
      for(int i=1;i<pos;++i)
        if(f[i]>ans)ans=f[i];
      printf("%d\n",ans-1);
    }
  }
}



