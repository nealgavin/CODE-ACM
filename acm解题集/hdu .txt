Humble Numbers
Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 11003    Accepted Submission(s): 4793


Problem Description
A number whose only prime factors are 2,3,5 or 7 is called a humble number. The sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, ... shows the first 20 humble numbers. 

Write a program to find and print the nth element in this sequence

 

Input
The input consists of one or more test cases. Each test case consists of one integer n with 1 <= n <= 5842. Input is terminated by a value of zero (0) for n.

 

Output
For each test case, print one line saying "The nth humble number is number.". Depending on the value of n, the correct suffix "st", "nd", "rd", or "th" for the ordinal number nth has to be used like it is shown in the sample output.

 

Sample Input
1
2
3
4
11
12
13
21
22
23
100
1000
5842
0
 

Sample Output
The 1st humble number is 1.
The 2nd humble number is 2.
The 3rd humble number is 3.
The 4th humble number is 4.
The 11th humble number is 12.
The 12th humble number is 14.
The 13th humble number is 15.
The 21st humble number is 28.
The 22nd humble number is 30.
The 23rd humble number is 32.
The 100th humble number is 450.
The 1000th humble number is 385875.
The 5842nd humble number is 2000000000.
 

Source
University of Ulm Local Contest 1996 
 

Recommend
JGShining




分析：用dp的思维解答 若一个数是Humble数，
那么他的2、3、5、7倍仍然是Humble数。 定
义a为第i个Humble数 a[n] = min( 2*a[m],3*a[n],5*a[k],7*a[l] )
,m,n,k,l在被选择后彼此移动。

#include<iostream>
using namespace std;
const int mm=1000010;
long long num[mm];
int MIN(int a,int b)
{
  return a<b?a:b;
}
int main()
{
 num[1]=1;int a,b,c,d;
 int x[4];
 a=b=c=d=1;
 int mid;
 for(int i=2;i<=5842;i++)
 {
   x[0]=num[a]*2;
   x[1]=num[b]*3;
   x[2]=num[c]*5;
   x[3]=num[d]*7;
   mid=MIN(MIN(x[0],x[1]),MIN(x[2],x[3]));
   num[i]=mid;
   if(mid==x[0])a++;
   if(mid==x[1])b++;
   if(mid==x[2])c++;
   if(mid==x[3])d++;
 }
 int n;
 while(cin>>n&&n)
 {
   if(n%10==1)
   {
     if(n%100==11)
     cout<<"The "<<n<<"th humble number is "<<num[n]<<".\n";
     else cout<<"The "<<n<<"st humble number is "<<num[n]<<".\n";
   }
   else if(n%10==2)
   {
     if(n%100==12)
     cout<<"The "<<n<<"th humble number is "<<num[n]<<".\n";
     else cout<<"The "<<n<<"nd humble number is "<<num[n]<<".\n";
   }
   else if(n%10==3)
   {
     if(n%100==13)
     cout<<"The "<<n<<"th humble number is "<<num[n]<<".\n";
     else cout<<"The "<<n<<"rd humble number is "<<num[n]<<".\n";
   }
   else cout<<"The "<<n<<"th humble number is "<<num[n]<<".\n";
 }
}
