C - XHXJ's LIS
Time Limit:1000MS     Memory Limit:32768KB     64bit IO Format:%I64d & %I64u
Submit
 
Status
 
Practice
 
HDU 4352
Description
#define xhxj (Xin Hang senior sister(学姐)) 
If you do not know xhxj, then carefully reading the entire description is very important.
As the strongest fighting force in UESTC, xhxj grew up in Jintang, a border town of Chengdu.
Like many god cattles, xhxj has a legendary life: 
2010.04, had not yet begun to learn the algorithm, xhxj won the second prize in the university contest. And in this fall, xhxj got one gold medal and one silver medal of regional contest. In the next year's summer, xhxj was invited to Beijing to attend the astar onsite. A few months later, xhxj got two gold medals and was also qualified for world's final. However, xhxj was defeated by zhymaoiing in the competition that determined who would go to the world's final(there is only one team for every university to send to the world's final) .Now, xhxj is much more stronger than ever，and she will go to the dreaming country to compete in TCO final.
As you see, xhxj always keeps a short hair(reasons unknown), so she looks like a boy( I will not tell you she is actually a lovely girl), wearing yellow T-shirt. When she is not talking, her round face feels very lovely, attracting others to touch her face gently。Unlike God Luo's, another UESTC god cattle who has cool and noble charm, xhxj is quite approachable, lively, clever. On the other hand,xhxj is very sensitive to the beautiful properties, "this problem has a very good properties"，she always said that after ACing a very hard problem. She often helps in finding solutions, even though she is not good at the problems of that type.
Xhxj loves many games such as，Dota, ocg, mahjong, Starcraft 2, Diablo 3.etc，if you can beat her in any game above, you will get her admire and become a god cattle. She is very concerned with her younger schoolfellows, if she saw someone on a DOTA platform, she would say: "Why do not you go to improve your programming skill". When she receives sincere compliments from others, she would say modestly: "Please don’t flatter at me.(Please don't black)."As she will graduate after no more than one year, xhxj also wants to fall in love. However, the man in her dreams has not yet appeared, so she now prefers girls.
Another hobby of xhxj is yy(speculation) some magical problems to discover the special properties. For example, when she see a number, she would think whether the digits of a number are strictly increasing. If you consider the number as a string and can get a longest strictly increasing subsequence the length of which is equal to k, the power of this number is k.. It is very simple to determine a single number’s power, but is it also easy to solve this problem with the numbers within an interval? xhxj has a little tired，she want a god cattle to help her solve this problem,the problem is: Determine how many numbers have the power value k in [L，R] in O(1)time.
For the first one to solve this problem，xhxj will upgrade 20 favorability rate。
 
Input
First a integer T(T<=10000),then T lines follow, every line has three positive integer L,R,K.(
0<L<=R<263-1 and 1<=K<=10).
 
Output
For each query, print "Case #t: ans" in a line, in which t is the number of the test case starting from 1 and ans is the answer.
 
Sample Input
1
123 321 2
 
Sample Output
Case #1: 139 
 

思路：

dp[i][j][k]：严格最长上升子序列的数目。
    i：当前进行到数字的位数，最低位为0。
    j: 状态压缩，10个数字中出现过哪些数字。
    k：当前最长上升子序列的长度。
[html] view plaincopy
#include<iostream>  
#include<cstring>  
#include<cstdio>  
#include<algorithm>  
using namespace std;  
typedef __int64 LL;  
LL dp[25][1<<11][12];///pos,state,len;  
int shu[77],pos,K;  
inline int shift(int x)  
{  
  return (1<<x);  
}  
LL dfs(int pos,int state,int len,bool istop)  
{  
  if(pos<0)return len==K;  
  if(!istop&&dp[pos][state][K]!=-1)return dp[pos][state][K];  
  //不能是相同位,如果是相同位则后面不可以任意  
  /*如35637 35---那么35一样，下一位必须大于等于6，  
  */  
  int bitnum=istop?shu[pos]:9;  
  LL ret=0;  
  for(int i=0;i<=bitnum;++i)  
  { if(state||i)  
    {if(shift(i)>state)  
      ret+=dfs(pos-1,state|shift(i),len+1,istop&&i==shu[pos]);  
    else if(shift(i)&state)  
    ret+=dfs(pos-1,state,len,istop&&i==shu[pos]);  
    else  
    for(int j=i+1;j<=9;++j)  
      if(shift(j)&state)  
    {ret+=dfs(pos-1,(state|shift(i))^shift(j),len,istop&&i==shu[pos]);  
     break;  
    }  
    }  
    else //if(i==0&&state==0)  
      ret+=dfs(pos-1,state,len,istop&&i==shu[pos]);  
  }  
  if(!istop&&dp[pos][state][K]==-1)dp[pos][state][K]=ret;  
  return ret;  
}  
LL get(LL x)  
{  
  pos=0;  
  if(x==0)return 0;  
  while(x)  
  {  
    shu[pos++]=x%10;  
    x/=10;  
  }  
  return dfs(pos-1,0,0,1);  
}  
int main()  
{  
  memset(dp,-1,sizeof(dp));  
  int cas;LL L,R;  
  while(~scanf("%d",&cas))  
  {  
    for(int ca=1;ca<=cas;++ca)  
    { printf("Case #%d: ",ca);  
      scanf("%I64d%I64d%d",&L,&R,&K);  
      printf("%I64d\n",get(R)-get(L-1));  
    }  
  }  
  return 0;  
}  
