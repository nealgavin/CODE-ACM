#include<stdio.h>
#define N 1005
int root[N],rank[N];
void make_set(int i)
{
  root[i]=i;
  rank[i]=1;
}
int find_set(int i)
{
  if(root[i]!=i)
  root[i]=find_set(root[i]);
  return root[i];
}
void unio(int x,int y)
{
  if(rank[x]>=rank[y]){root[y]=x;rank[x]+=rank[y];}
  else {root[x]=y;rank[y]+=rank[x];}
}
int main()
{
  int T,n,m,i,num,x,y;
  scanf("%d",&T);
  while(T--)
  {
    scanf("%d%d",&n,&m);
    for(i=1;i<=n;i++)
    make_set(i);
    for(i=1;i<=m;i++)
    {
      scanf("%d%d",&x,&y);
      if(find_set(x)!=find_set(y))
      {
        unio(find_set(x),find_set(y));
      }
    }num=0;
    for(i=1;i<=n;i++)//根的个数
    {
      if(i==root[i])num++;
    }printf("%d\n",num);
  }
}
