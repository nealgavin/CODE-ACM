过山车

Time Limit: 1000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 6952    Accepted Submission(s): 3020


Problem Description
RPG girls今天和大家一起去游乐场玩，终于可以坐上梦寐以求的过山车了。可是，过山车的每一排只有两个座位，而且还有条不成文的规矩，就是每个女生必须找个个男生做partner和她同坐。但是，每个女孩都有各自的想法，举个例子把，Rabbit只愿意和XHD或PQK做partner，Grass只愿意和linle或LL做partner，PrincessSnow愿意和水域浪子或伪酷儿做partner。考虑到经费问题，boss刘决定只让找到partner的人去坐过山车，其他的人，嘿嘿，就站在下面看着吧。聪明的Acmer，你可以帮忙算算最多有多少对组合可以坐上过山车吗？
 

Input
输入数据的第一行是三个整数K , M , N，分别表示可能的组合数目，女生的人数，男生的人数。0<K<=1000
1<=N 和M<=500.接下来的K行，每行有两个数，分别表示女生Ai愿意和男生Bj做partner。最后一个0结束输入。
 

Output
对于每组数据，输出一个整数，表示可以坐上过山车的最多组合数。
 

Sample Input
6 3 3
1 1
1 2
1 3
2 1
2 3
3 1
0
 

Sample Output
3
 

Author
PrincessSnow
 

Source
RPG专场练习赛
 

Recommend
lcy
思路：标准的二分图

#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
using namespace std;
const int mm=505;
vector<int>g[mm];
int n,w,m;
int mark[mm];
bool vis[mm];
bool dfs(int x)
{ int z=g[x].size();
  int ck;
  for(int i=0;i<z;++i)
  {
    ck=g[x][i];
    if(vis[ck])continue;
    vis[ck]=1;
    if(!mark[ck]||dfs(mark[ck]))
    {
      mark[ck]=x;
      return 1;
    }
  }
  return 0;
}
int solve()
{
  memset(mark,0,sizeof(mark));
  int ret=0;
  for(int i=1;i<=w;++i)
  {
    memset(vis,0,sizeof(vis));
   if(dfs(i))
   {
     ++ret;
   }
  }
  return ret;
}
int main()
{ int a,b;
  while(scanf("%d",&n)&&n)
  {
    scanf("%d%d",&w,&m);
    for(int i=1;i<=w;++i)
      g[i].clear();
    for(int i=0;i<n;++i)
    {
      scanf("%d%d",&a,&b);
      g[a].push_back(b);
    }
    printf("%d\n",solve());
  }
  return 0;
}

