Computer Transformation
Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 4187    Accepted Submission(s): 1546


Problem Description
A sequence consisting of one digit, the number 1 is initially written into a computer. At each successive time step, the computer simultaneously tranforms each digit 0 into the sequence 1 0 and each digit 1 into the sequence 0 1. So, after the first time step, the sequence 0 1 is obtained; after the second, the sequence 1 0 0 1, after the third, the sequence 0 1 1 0 1 0 0 1 and so on. 

How many pairs of consequitive zeroes will appear in the sequence after n steps? 

 

Input
Every input line contains one natural number n (0 < n ¡Ü1000). 
 

Output
For each input n print the number of consecutive zeroes pairs that will appear in the sequence after n steps.

 

Sample Input
2
3
 

Sample Output
1
1
 

Source
Southeastern Europe 2005 
 

Recommend
JGShining

dp[n]=dp[n-1]+2*dp[n-2];

#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int mm=1100;
const int mod=10000;
int dp[mm][mm];
int main()
{ memset(dp,0,sizeof(dp));
  dp[2][0]=1;
  dp[3][0]=1;
  int z;
  for(int i=4;i<mm;i++)
  { for(int j=0;j<mm;j++)
    {dp[i][j]=dp[i-1][j]+2*dp[i-2][j]+dp[i][j];
     z=dp[i][j]/mod;
     if(z)
     {dp[i][j+1]=z;dp[i][j]=dp[i][j]%mod;}
    }
  }
  int n;
  while(cin>>n)
  { int z;
    if(n==1){cout<<"0\n";continue;}
    for(int i=mm-1;i>=0;i--)
    if(dp[n][i]){cout<<dp[n][i];z=i;break;}
    for(int i=z-1;i>=0;i--)
    printf("%04d",dp[n][i]);
    cout<<"\n";
  }
}

