食物链
Time Limit: 1000MS	
Memory Limit: 10000K
Total Submissions: 33156	
Accepted: 9626
Description
动物王国中有三类动物A,B,C，这三类动物的食物链构成了有趣的环形。A吃B， B吃C，C吃A。 
现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。 
有人用两种说法对这N个动物所构成的食物链关系进行描述： 
第一种说法是"1 X Y"，表示X和Y是同类。 
第二种说法是"2 X Y"，表示X吃Y。 
此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。 
1）	当前的话与前面的某些真的话冲突，就是假话； 
2）	当前的话中X或Y比N大，就是假话； 
3）	当前的话表示X吃X，就是假话。 
你的任务是根据给定的N（1 <= N <= 50,000）和K句话（0 <= K <= 100,000），输出假话的总数。 
Input
第一行是两个整数N和K，以一个空格分隔。 
以下K行每行是三个正整数 D，X，Y，两数之间用一个空格隔开，其中D表示说法的种类。 
若D=1，则表示X和Y是同类。 
若D=2，则表示X吃Y。
Output
只有一个整数，表示假话的数目。
Sample Input
100 7
1 101 1 
2 1 2
2 2 3 
2 3 3 
1 1 3 
2 3 1 
1 5 5
Sample Output
3
Source
Noi 01

思路：建立并查集，若是已经建立相互之间关系的就合并为一个集合。然后依次判断新关系是否合理。

#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int nn=5e4+5;
const int mm=1e5+5;
int root[nn],kind[nn];
int n,k;
void data()
{
  for(int i=0;i<=n;i++)
    root[i]=i,kind[i]=0;
}
int look(int x)
{ int fa=root[x];
  if(x^root[x])
  {root[x]=look(root[x]);
   kind[x]=(kind[x]+kind[fa])%3;///把关系从根延伸出来
  }
  return root[x];
}
void uni(int ra,int rb,int a,int b,int k)
{
  root[rb]=ra;kind[rb]=(kind[a]-kind[b]-k+3)%3;///保证根之间符合条件，建立根间关系
}
int main()
{
   scanf("%d%d",&n,&k);
    data();
    int a,b,c,ans,cc,bb;ans=0;
    for(int i=0;i<k;i++)
    { scanf("%d%d%d",&a,&b,&c);
      ///cin>>a>>b>>c;///cin超时严重啊
      if(b>n||c>n){++ans;continue;}
      if(a==2&&b==c){++ans;continue;}
      bb=look(b);cc=look(c);
      if(bb^cc)///不是一个集合，说明一定符合条件，那就合并
        uni(bb,cc,b,c,a-1);
      else
      {
        if(a==1&&kind[b]^kind[c])++ans;
        else if(a==2&&(kind[b]-kind[c]+3)%3!=1)++ans;
      }
    }
    printf("%d\n",ans);
}



